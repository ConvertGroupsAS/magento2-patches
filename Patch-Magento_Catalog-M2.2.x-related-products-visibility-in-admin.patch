--- Model/ProductLink/CollectionProvider.php	2018-10-11 12:20:40.000000000 +0300
+++ Model/ProductLink/CollectionProvider.php	2018-10-11 12:25:40.988682590 +0300
@@ -47,22 +47,17 @@
 
         $products = $this->providers[$type]->getLinkedProducts($product);
         $converter = $this->converterPool->getConverter($type);
-        $output = [];
         $sorterItems = [];
         foreach ($products as $item) {
-            $output[$item->getId()] = $converter->convert($item);
+            $itemId = $item->getId();
+            $sorterItems[$itemId] = $converter->convert($item);
+            $sorterItems[$itemId]['position'] = $sorterItems[$itemId]['position'] ?? 0;
         }
-
-        foreach ($output as $item) {
-            $itemPosition = $item['position'];
-            if (!isset($sorterItems[$itemPosition])) {
-                $sorterItems[$itemPosition] = $item;
-            } else {
-                $newPosition = $itemPosition + 1;
-                $sorterItems[$newPosition] = $item;
-            }
-        }
-        ksort($sorterItems);
+        usort($sorterItems, function ($itemA, $itemB) {
+            $posA = intval($itemA['position']);
+            $posB = intval($itemB['position']);
+            return $posA <=> $posB;
+        });
         return $sorterItems;
     }
 }
