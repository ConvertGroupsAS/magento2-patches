index 76067b9..5148046 100644
--- Model/Order/Creditmemo.php
+++ Model/Order/Creditmemo.php
@@ -532,25 +532,15 @@ class Creditmemo extends AbstractModel implements EntityInterface, CreditmemoInt
      */
     public function isLast()
     {
-        $items = $this->getAllItems();
-        foreach ($items as $item) {
-            if (!$item->isLast()) {
-                return false;
-            }
-        }
-
-        if (empty($items)) {
-            $order = $this->getOrder();
-            if ($order) {
-                foreach ($order->getItems() as $orderItem) {
-                    if ($orderItem->canRefund()) {
-                        return false;
-                    }
-                }
-            }
-        }
-
-        return true;
+        // Patch: HOYERCARE-171
+        $order = $this->getOrder();
+        $sum = $order->getGrandTotal()
+            - $order->getTotalCanceled()
+            - $order->getTotalRefunded()
+            - $this->getDiscountAmount()
+            - $this->getSubtotalInclTax()
+            - $this->getShippingInclTax();
+        return !($sum > 0.01);
     }
 
     /**
index d1c4b03..f6eaa89 100644
--- Model/Order/Creditmemo/Total/Tax.php
+++ Model/Order/Creditmemo/Total/Tax.php
@@ -141,26 +141,45 @@ class Tax extends AbstractTotal
             $baseTotalDiscountTaxCompensation += $baseShippingDiscountTaxCompensationAmount;
         }
 
-        $allowedTax = $order->getTaxInvoiced() - $order->getTaxRefunded() - $creditmemo->getTaxAmount();
-        $allowedBaseTax = $order->getBaseTaxInvoiced() - $order->getBaseTaxRefunded() - $creditmemo->getBaseTaxAmount();
-        $allowedDiscountTaxCompensation = $order->getDiscountTaxCompensationInvoiced() +
-            $order->getShippingDiscountTaxCompensationAmount() -
-            $order->getDiscountTaxCompensationRefunded() -
-            $order->getShippingDiscountTaxCompensationRefunded() -
-            $creditmemo->getDiscountTaxCompensationAmount() -
-            $creditmemo->getShippingDiscountTaxCompensationAmount();
-        $allowedBaseDiscountTaxCompensation = $order->getBaseDiscountTaxCompensationInvoiced() +
-            $order->getBaseShippingDiscountTaxCompensationAmnt() -
-            $order->getBaseDiscountTaxCompensationRefunded() -
-            $order->getBaseShippingDiscountTaxCompensationRefunded() -
-            $creditmemo->getBaseShippingDiscountTaxCompensationAmnt() -
-            $creditmemo->getBaseDiscountTaxCompensationAmount();
+        // Patch: HOYERCARE-171
+        $invoiceTaxRefunded = $invoiceBaseTaxRefunded = 0;
+        if ($invoice) {
+            $collection = $creditmemo->getCollection();
+            $collection->addFieldToFilter(
+                \Magento\Sales\Api\Data\CreditmemoInterface::INVOICE_ID,
+                $invoice->getId()
+            );
+            /** @var \Magento\Sales\Model\Order\Creditmemo $invoiceCreditmemo */
+            foreach ($collection as $invoiceCreditmemo) {
+                $invoiceTaxRefunded += $invoiceCreditmemo->getTaxAmount();
+                $invoiceBaseTaxRefunded += $invoiceCreditmemo->getBaseTaxAmount();
+            }
+            $allowedTax = $invoice->getTaxAmount() - $invoiceTaxRefunded;
+            $allowedBaseTax = $invoice->getBaseTaxAmount() - $invoiceBaseTaxRefunded;
+            $allowedDiscountTaxCompensation = $invoice->getDiscountTaxCompensationAmount();
+            $allowedBaseDiscountTaxCompensation = $invoice->getBaseDiscountTaxCompensationAmount();
+        } else {
+            $allowedTax = $order->getTaxInvoiced() - $order->getTaxRefunded() - $creditmemo->getTaxAmount();
+            $allowedBaseTax = $order->getBaseTaxInvoiced() - $order->getBaseTaxRefunded() - $creditmemo->getBaseTaxAmount();
+            $allowedDiscountTaxCompensation = $order->getDiscountTaxCompensationInvoiced() +
+                $order->getShippingDiscountTaxCompensationAmount() -
+                $order->getDiscountTaxCompensationRefunded() -
+                $order->getShippingDiscountTaxCompensationRefunded() -
+                $creditmemo->getDiscountTaxCompensationAmount() -
+                $creditmemo->getShippingDiscountTaxCompensationAmount();
+            $allowedBaseDiscountTaxCompensation = $order->getBaseDiscountTaxCompensationInvoiced() +
+                $order->getBaseShippingDiscountTaxCompensationAmnt() -
+                $order->getBaseDiscountTaxCompensationRefunded() -
+                $order->getBaseShippingDiscountTaxCompensationRefunded() -
+                $creditmemo->getBaseShippingDiscountTaxCompensationAmnt() -
+                $creditmemo->getBaseDiscountTaxCompensationAmount();
+        }
 
         if ($creditmemo->isLast() && !$isPartialShippingRefunded) {
             $totalTax = $allowedTax;
             $baseTotalTax = $allowedBaseTax;
-            $totalDiscountTaxCompensation = $allowedDiscountTaxCompensation;
-            $baseTotalDiscountTaxCompensation = $allowedBaseDiscountTaxCompensation;
+            $totalDiscountTaxCompensation = $allowedDiscountTaxCompensation - $invoiceTaxRefunded;
+            $baseTotalDiscountTaxCompensation = $allowedBaseDiscountTaxCompensation - $invoiceBaseTaxRefunded;
         } else {
             $totalTax = min($allowedTax, $totalTax);
             $baseTotalTax = min($allowedBaseTax, $baseTotalTax);

