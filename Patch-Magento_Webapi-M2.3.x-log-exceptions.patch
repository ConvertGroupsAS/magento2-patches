--- Controller/Rest.php	2019-08-07 11:07:50.823000000 +0200
+++ Controller/Rest.php	2019-08-07 11:26:50.640326202 +0200
@@ -119,6 +119,11 @@
     private $storeManager;
 
     /**
+     * @var \Psr\Log\LoggerInterface
+     */
+    protected $logger;
+
+    /**
      * Initialize dependencies
      *
      * @param RestRequest $request
@@ -134,6 +139,7 @@
      * @param ParamsOverrider $paramsOverrider
      * @param StoreManagerInterface $storeManager
      * @param RequestProcessorPool $requestProcessorPool
+     * @param \Psr\Log\LoggerInterface $logger
      *
      * TODO: Consider removal of warning suppression
      * @SuppressWarnings(PHPMD.ExcessiveParameterList)
@@ -151,7 +157,8 @@
         \Magento\Framework\App\AreaList $areaList,
         ParamsOverrider $paramsOverrider,
         StoreManagerInterface $storeManager,
-        RequestProcessorPool $requestProcessorPool
+        RequestProcessorPool $requestProcessorPool,
+        \Psr\Log\LoggerInterface $logger
     ) {
         $this->_router = $router;
         $this->_request = $request;
@@ -166,6 +173,7 @@
         $this->paramsOverrider = $paramsOverrider;
         $this->storeManager = $storeManager;
         $this->requestProcessorPool = $requestProcessorPool;
+        $this->logger = $logger;
     }
 
     /**
@@ -187,6 +195,15 @@
             $processor = $this->requestProcessorPool->getProcessor($this->_request);
             $processor->process($this->_request);
         } catch (\Exception $e) {
+
+            if ($e instanceof \Magento\Framework\Exception\AggregateExceptionInterface && $e->getErrors()) {
+                foreach ($e->getErrors() as $aggEx) {
+                    $this->logger->critical($aggEx, ['trace' => $aggEx->getTraceAsString()]);
+                }
+            } else {
+                $this->logger->critical($e, ['trace' => $e->getTraceAsString()]);
+            }
+
             $maskedException = $this->_errorProcessor->maskException($e);
             $this->_response->setException($maskedException);
         }
