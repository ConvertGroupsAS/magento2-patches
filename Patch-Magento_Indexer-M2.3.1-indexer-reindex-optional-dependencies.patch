--- Console/Command/IndexerReindexCommand.php
+++ Console/Command/IndexerReindexCommand.php
@@ -22,6 +22,8 @@
  */
 class IndexerReindexCommand extends AbstractIndexerManageCommand
 {
+    const INPUT_OPTION_WITH_DEPENDENCIES = 'with-dependencies';
+
     /**
      * @var array
      */
@@ -66,6 +68,13 @@
             ->setDescription('Reindexes Data')
             ->setDefinition($this->getInputList());
 
+        $this->addOption(
+            static::INPUT_OPTION_WITH_DEPENDENCIES,
+            null,
+            \Symfony\Component\Console\Input\InputOption::VALUE_NONE,
+            'Reindex also dependent and related indexers (default Magento 2 behavior)'
+        );
+
         parent::configure();
     }
 
@@ -74,6 +83,13 @@
      */
     protected function execute(InputInterface $input, OutputInterface $output)
     {
+        $withDependencies = $this->isWithDependencies($input);
+
+        if (!$withDependencies) {
+            $output->writeln('<info>Dependent and related indexers will be ingored.</info>');
+            $output->writeln('Use <info>--with-dependencies</info> to reindex with dependent and related indexers.');
+        }
+
         $returnValue = Cli::RETURN_FAILURE;
         foreach ($this->getIndexers($input) as $indexer) {
             try {
@@ -119,15 +135,19 @@
 
         $relatedIndexers = [];
         $dependentIndexers = [];
-        foreach ($indexers as $indexer) {
-            $relatedIndexers = array_merge(
-                $relatedIndexers,
-                $this->getRelatedIndexerIds($indexer->getId())
-            );
-            $dependentIndexers = array_merge(
-                $dependentIndexers,
-                $this->getDependentIndexerIds($indexer->getId())
-            );
+        $withDependencies = $this->isWithDependencies($input);
+
+        if ($withDependencies) {
+            foreach ($indexers as $indexer) {
+                $relatedIndexers = array_merge(
+                    $relatedIndexers,
+                    $this->getRelatedIndexerIds($indexer->getId())
+                );
+                $dependentIndexers = array_merge(
+                    $dependentIndexers,
+                    $this->getDependentIndexerIds($indexer->getId())
+                );
+            }
         }
 
         $invalidRelatedIndexers = [];
@@ -300,4 +320,15 @@
         }
         return $this->dependencyInfoProvider;
     }
+
+    /**
+     * @param \Symfony\Component\Console\Input\InputInterface $input
+     *
+     * @return bool
+     */
+    protected function isWithDependencies(
+        \Symfony\Component\Console\Input\InputInterface $input
+    ) {
+        return $input->getOption(static::INPUT_OPTION_WITH_DEPENDENCIES);
+    }
 }
