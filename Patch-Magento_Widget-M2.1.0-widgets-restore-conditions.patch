--- Controller/Adminhtml/Widget/LoadOptions.php	2016-10-11 00:27:56.000000000 +0300
+++ Controller/Adminhtml/Widget/LoadOptions.php	2017-02-21 22:59:01.000000000 +0300
@@ -6,9 +6,16 @@
  */
 namespace Magento\Widget\Controller\Adminhtml\Widget;
 
+use Magento\Framework\App\ObjectManager;
+
 class LoadOptions extends \Magento\Backend\App\Action
 {
     /**
+     * @var \Magento\Widget\Helper\Conditions
+    */
+    private $conditionsHelper;
+
+    /**
      * Ajax responder for loading plugin options form
      *
      * @return void
@@ -18,13 +25,19 @@
         try {
             $this->_view->loadLayout();
             if ($paramsJson = $this->getRequest()->getParam('widget')) {
-                $request = $this->_objectManager->get('Magento\Framework\Json\Helper\Data')->jsonDecode($paramsJson);
+                $request = $this->_objectManager->get(\Magento\Framework\Json\Helper\Data::class)
+                    ->jsonDecode($paramsJson);
                 if (is_array($request)) {
                     $optionsBlock = $this->_view->getLayout()->getBlock('wysiwyg_widget.options');
                     if (isset($request['widget_type'])) {
                         $optionsBlock->setWidgetType($request['widget_type']);
                     }
                     if (isset($request['values'])) {
+                        $request['values'] = array_map('htmlspecialchars_decode', $request['values']);
+                        if (isset($request['values']['conditions_encoded'])) {
+                            $request['values']['conditions'] = 
+                                $this->getConditionsHelper()->decode($request['values']['conditions_encoded']);
+                        }
                         $optionsBlock->setWidgetValues($request['values']);
                     }
                 }
@@ -33,8 +46,21 @@
         } catch (\Magento\Framework\Exception\LocalizedException $e) {
             $result = ['error' => true, 'message' => $e->getMessage()];
             $this->getResponse()->representJson(
-                $this->_objectManager->get('Magento\Framework\Json\Helper\Data')->jsonEncode($result)
+                $this->_objectManager->get(\Magento\Framework\Json\Helper\Data::class)->jsonEncode($result)
             );
         }
     }
+    
+    /**
+     * @return \Magento\Widget\Helper\Conditions
+     * @deprecated
+     */
+    private function getConditionsHelper()
+    {
+        if (!$this->conditionsHelper) {
+            $this->conditionsHelper = ObjectManager::getInstance()->get(\Magento\Widget\Helper\Conditions::class);
+        }
+
+        return $this->conditionsHelper;
+    }    
 }
--- Model/Widget.php	2016-10-11 00:27:56.000000000 +0300
+++ Model/Widget.php	2017-02-21 22:54:40.000000000 +0300
@@ -314,7 +314,7 @@
                 }
             }
             if ($value) {
-                $directive .= sprintf(' %s="%s"', $name, $value);
+                $directive .= sprintf(' %s="%s"', $name, $this->escaper->escapeQuote($value));
             }
         }
 
